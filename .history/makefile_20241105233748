# Compiler and flags
CC = gcc
CFLAGS = -pthread -Wall

# Executable name
TARGET = echo

# Source files
SRC = main.c echo.c

# Header files
HEADERS = echo.h

# Port for testing
PORT = 8080

# Target to build the executable
$(TARGET): $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) -o $(TARGET) $(SRC)

# Target to run tests and store output in test.txt
test: $(TARGET)
	# Start the server in the background on port 8080
	./$(TARGET) -p $(PORT) & \
	SERVER_PID=$$!; \
	sleep 1; \
	# First Telnet test: Connect and send "How is Rex Doing?"
	(echo "Connecting to server and sending 'How is Rex Doing?'"; \
	echo "telnet localhost $(PORT)"; \
	{ echo "How is Rex Doing?"; sleep 1; } | telnet localhost $(PORT)) >> test.txt 2>&1; \
	sleep 1; \
	# Second Telnet test: Connect and send "Rex is doing great!"
	(echo "Connecting to server and sending 'Rex is doing great!'"; \
	echo "telnet localhost $(PORT)"; \
	{ echo "Rex is doing great!"; sleep 1; } | telnet localhost $(PORT)) >> test.txt 2>&1; \
	sleep 1; \
	# Kill the server after the tests
	kill $$SERVER_PID; \
	echo "Test completed. Check test.txt for results."

# Clean target to remove generated files
clean:
	rm -f $(TARGET) test.txt
